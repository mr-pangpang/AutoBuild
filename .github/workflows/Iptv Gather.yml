name: 自动创建disk仓库并保存TV.txt
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  create-and-save:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取当前仓库（Live）代码
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 生成/处理TV.txt文件
        run: |
          # 替换为你的实际生成命令
          echo "TV.txt内容示例" > TV.txt

      - name: 检查disk仓库是否存在（调用GitHub API）
        id: check_repo
        run: |
          # 调用API检查仓库是否存在，返回200为存在，404为不存在
          RESPONSE=$(curl -s -w "%{http_code}" -H "Authorization: token ${{ secrets.PAT_TOKEN }}" "https://api.github.com/repos/mr-pangpang/disk")
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          echo "repo_exists=$([ "$HTTP_CODE" -eq 200 ] && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      - name: 若仓库不存在则创建（调用GitHub API）
        if: steps.check_repo.outputs.repo_exists == 'false'
        run: |
          # 创建仓库（默认公共，如需私有，添加"private": true）
          curl -X POST -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"name": "disk", "auto_init": true}' \
          "https://api.github.com/user/repos"

      - name: 克隆disk仓库（无论是否新创建）
        run: |
          git clone https://${{ secrets.PAT_TOKEN }}@github.com/mr-pangpang/disk.git target-repo

      - name: 创建目标路径并移动文件
        run: |
          mkdir -p target-repo/TV
          mv TV.txt target-repo/TV/

      - name: 提交并推送disk仓库变更
        run: |
          cd target-repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add TV/TV.txt
          git commit -m "自动保存TV.txt到TV目录" || echo "无文件变更，无需提交"
          git push https://${{ secrets.PAT_TOKEN }}@github.com/mr-pangpang/disk.git HEAD:main
