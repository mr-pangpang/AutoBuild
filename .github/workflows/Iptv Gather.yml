name: Gather Auto-Build

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC凌晨执行
  workflow_dispatch:  # 手动触发

jobs:
  save-gather:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 授予写入权限
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取完整历史

      - name: 下载Gather文件
        run: |
          echo "开始下载Gather文件: https://tv-1.iill.top/m3u/Gather"
          
          # 下载文件
          curl -sSf --retry 3 --max-time 60 \
            -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
            "https://tv-1.iill.top/m3u/Gather" -o "Gather.txt"
          
          # 检查下载结果
          if [ ! -f "Gather.txt" ]; then
            echo "❌ Gather.txt下载失败"
            exit 1
          fi
          
          echo "✅ 下载完成"

      - name: 验证文件内容
        run: |
          echo "验证Gather.txt文件..."
          
          # 检查文件是否为空
          if [ ! -s "Gather.txt" ]; then
            echo "❌ Gather.txt内容为空"
            exit 1
          fi
          
          # 显示文件信息
          file_size=$(du -h "Gather.txt" | cut -f1)
          line_count=$(wc -l < "Gather.txt")
          
          echo "📊 文件大小: $file_size"
          echo "📈 行数: $line_count"
          echo "🔍 前2行预览:"
          head -n 2 "Gather.txt"
          
          # 检查是否为有效的M3U格式
          if ! head -n 1 "Gather.txt" | grep -q "^#EXTM3U"; then
            echo "⚠️  警告: 文件可能不是标准的M3U格式"
          else
            echo "✅ 检测到标准M3U格式"
          fi

      - name: 检查文件变更
        id: check_changes
        run: |
          # 检查文件是否存在于git中
          if git ls-files --error-unmatch "Gather.txt" >/dev/null 2>&1; then
            # 文件已存在，检查是否有变化
            if git diff --quiet "Gather.txt"; then
              echo "🟢 Gather.txt内容无变化"
              echo "has_changes=false" >> $GITHUB_OUTPUT
            else
              echo "🔵 Gather.txt内容有更新"
              echo "has_changes=true" >> $GITHUB_OUTPUT
            fi
          else
            # 新文件
            echo "🟡 Gather.txt是新文件"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: 提交更新
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          # 配置Git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@users.noreply.github.com"
          
          # 添加文件
          git add Gather.txt
          
          # 生成提交信息
          commit_time=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M CST')
          line_count=$(wc -l < "Gather.txt")
          file_size=$(du -h "Gather.txt" | cut -f1)
          
          commit_msg="📺 更新Gather列表 - $commit_time
          行数: $line_count | 大小: $file_size
          来源: https://tv-1.iill.top/m3u/Gather"
          
          # 提交
          git commit -m "$commit_msg"
          
          # 推送
          git push origin ${{ github.ref }}
          
          echo "✅ 已成功提交并推送更新"

      - name: 无更新提示
        if: steps.check_changes.outputs.has_changes == 'false'
        run: |
          echo "ℹ️ Gather.txt内容无变化，无需更新"
          echo "当前文件信息:"
          echo "大小: $(du -h Gather.txt | cut -f1)"
          echo "行数: $(wc -l < Gather.txt)"

      - name: 完成通知
        run: |
          echo "🎉 Gather自构建流程完成"
          echo "分支: ${{ github.ref }}"
          echo "运行时间: $(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S CST')"
