name: tv-file-merge-process-sync
on:
  schedule:
    - cron: "*/15 * * * *"  # 统一每15分钟更新一次
  workflow_dispatch:  # 保留手动触发功能

jobs:
  download-merge-clean-save-tv:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取当前仓库代码
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 1. 下载两个源文件
      - name: 下载 tv 源文件
        run: |
          curl -f -o tv_source "http://123.56.43.183/tv/m3u/tv"
          echo "tv 源文件下载完成，大小：$(du -h tv_source)"

      - name: 下载 migu_video 源文件
        run: |
          curl -f -o migu_source "https://raw.githubusercontent.com/develop202/migu_video/refs/heads/main/interface.txt"
          echo "migu_video 源文件下载完成，大小：$(du -h migu_source)"

      # 2. 合并源文件为临时文件
      - name: 合并两个源文件
        run: |
          cat tv_source migu_source > tv_temp
          echo "源文件合并完成，临时文件大小：$(du -h tv_temp)"

      # 3. 核心清理：删除所有 tvg-id 和 tvg-name 字段（用 Ubuntu 原生工具，高效稳定）
      - name: 清理 tvg-id 字段
        run: |
          # 匹配所有 "tvg-id='任意内容'" 或 'tvg-id="任意内容"' 格式，直接删除
          sed -i -E 's/(tvg-id=("([^"]*)"|'\''([^'\'']*)'\''))//g' tv_temp
          echo "已删除所有 tvg-id 字段"

      - name: 清理 tvg-name 字段
        run: |
          # 同样匹配单双引号格式，避免因引号类型导致清理不彻底
          sed -i -E 's/(tvg-name=("([^"]*)"|'\''([^'\'']*)'\''))//g' tv_temp
          echo "已删除所有 tvg-name 字段"

      # 4. 优化格式：清理多余空格（避免字段删除后残留空字符）
      - name: 清理连续空格和首尾空格
        run: |
          # 连续空格替换为单个空格，同时删除行首尾空格
          sed -i -e 's/  */ /g' -e 's/^ //' -e 's/ $//' tv_temp
          # 重命名为最终 tv 文件
          mv tv_temp tv
          echo "格式优化完成，最终 tv 文件大小：$(du -h tv)"

      # 5. 推送至第二仓库（dpdisk/file）
      - name: 检查 dpdisk/file 仓库是否存在
        id: check_repo
        run: |
          RESPONSE=$(curl -s -w "%{http_code}" -H "Authorization: token ${{ secrets.PANGPANG }}" "https://api.github.com/repos/dpdisk/file")
          echo "repo_exists=$([ "$HTTP_CODE" -eq 200 ] && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      - name: 若仓库不存在则创建
        if: steps.check_repo.outputs.repo_exists == 'false'
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.PANGPANG }}" -H "Content-Type: application/json" -d '{"name":"file","auto_init":false,"visibility":"public"}' "https://api.github.com/user/repos"

      - name: 克隆仓库并推送文件
        run: |
          git clone -b main --single-branch https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git target-repo || (mkdir -p target-repo && cd target-repo && git init && git remote add origin https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git && git checkout -b main)
          mv tv target-repo/
          cd target-repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add tv
          CURRENT_TIME=$(date -d "+8 hours" +'%Y-%m-%d %H:%M:%S')
          git commit -m "clean tvg-id/tvg-name + merge sources to tv - updatetime $CURRENT_TIME" || echo "无变更无需提交"
          git push https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git HEAD:main
