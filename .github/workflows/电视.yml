name: tv-sync
on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 1

      - run: sudo apt update -y && sudo apt install -y sed curl

      # 下载tv源文件
      - run: |
          curl -f -o tv_source -m 10 --retry 3 "http://123.56.43.183/tv/m3u/tv"
          [ ! -f "tv_source" ] || [ $(du -b "tv_source" | cut -f1) -eq 0 ] && exit 1

      # 下载migu源文件
      - run: |
          curl -f -o migu_source -m 10 --retry 3 "https://raw.githubusercontent.com/develop202/migu_video/refs/heads/main/interface.txt"
          [ ! -f "migu_source" ] || [ $(du -b "migu_source" | cut -f1) -eq 0 ] && exit 1

      # 合并+清理字段
      - run: |
          cat tv_source migu_source | grep -v '^$' > tv_temp
          sed -i -E '
            s/(svg-id=("([^"]*)"|'\''([^'\'']*)'\''))[[:space:]]*(svg-name=("([^"]*)"|'\''([^'\'']*)'\''))//g;
            s/(svg-id|svg-name|tvg-id|tvg-name)=("([^"]*)"|'\''([^'\'']*)'\''))//g;
            s/  */ /g; s/^ //; s/ $//; /^$/d
          ' tv_temp
          mv tv_temp tv

      # 检查目标仓库
      - id: check_repo
        run: |
          HTTP_CODE=$(curl -s -w "%{http_code}" -m 10 -H "Authorization: token ${{ secrets.PANGPANG }}" "https://api.github.com/repos/dpdisk/file" | tail -n1)
          echo "repo_exists=$([ "$HTTP_CODE" -eq 200 ] && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      # 创建仓库（不存在时）
      - if: steps.check_repo.outputs.repo_exists == 'false'
        run: |
          CREATE_CODE=$(curl -s -w "%{http_code}" -X POST -m 15 -H "Authorization: token ${{ secrets.PANGPANG }}" -H "Content-Type: application/json" -d '{"name":"file","auto_init":false,"visibility":"public"}' "https://api.github.com/user/repos" | tail -n1)
          [ "$CREATE_CODE" -ne 201 ] && exit 1

      # 推送文件
      - run: |
          # 克隆/初始化仓库
          git clone -b main --single-branch --depth 1 https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git target-repo || (mkdir -p target-repo && cd target-repo && git init && git remote add origin https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git && git checkout -b main)
          
          # 提交推送
          mv tv target-repo/ && cd target-repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git diff --quiet -- tv && exit 0
          
          COMMIT_MSG="sync: merge & clean tv - $(date -d "+8 hours" +'%Y-%m-%d %H:%M:%S')"
          git add tv && git commit -m "$COMMIT_MSG"
          git push --retry 3 https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git HEAD:main
