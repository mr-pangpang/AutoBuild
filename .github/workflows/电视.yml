name: tv-sync
on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:
    inputs:
      sync_note:
        description: "同步备注（可选）"
        required: false
        default: "手动同步"

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 1

      - run: sudo apt update -y && sudo apt install -y sed curl

      - run: |
          curl -f -o tv_source -m 10 --retry 3 "http://123.56.43.183/tv/m3u/tv"
          [ ! -f "tv_source" ] || [ $(du -b "tv_source" | cut -f1) -eq 0 ] && exit 1

      - run: |
          curl -f -o migu_source -m 10 --retry 3 "https://raw.githubusercontent.com/develop202/migu_video/refs/heads/main/interface.txt"
          [ ! -f "migu_source" ] || [ $(du -b "migu_source" | cut -f1) -eq 0 ] && exit 1

      - run: |
          cat tv_source migu_source | grep -v '^$' > tv_temp
          sed -i -E '
            s/(svg-id=("([^"]*)"|'\''([^'\'']*)'\''))[[:space:]]*(svg-name=("([^"]*)"|'\''([^'\'']*)'\''))//g;
            s/(svg-id=("([^"]*)"|'\''([^'\'']*)'\''))//g;
            s/(svg-name=("([^"]*)"|'\''([^'\'']*)'\''))//g;
            s/(tvg-id=("([^"]*)"|'\''([^'\'']*)'\''))[[:space:]]*(tvg-name=("([^"]*)"|'\''([^'\'']*)'\''))//g;
            s/(tvg-id=("([^"]*)"|'\''([^'\'']*)'\''))//g;
            s/(tvg-name=("([^"]*)"|'\''([^'\'']*)'\''))//g;
            s/  */ /g;
            s/^ //;
            s/ $//;
            /^$/d
          ' tv_temp
          mv tv_temp tv

      - id: check_repo
        run: |
          RESPONSE=$(curl -s -w "%{http_code}" -m 10 -H "Authorization: token ${{ secrets.PANGPANG }}" "https://api.github.com/repos/dpdisk/file")
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          echo "repo_exists=$([ "$HTTP_CODE" -eq 200 ] && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      - if: steps.check_repo.outputs.repo_exists == 'false'
        run: |
          CREATE_RESP=$(curl -s -w "%{http_code}" -X POST -m 15 -H "Authorization: token ${{ secrets.PANGPANG }}" -H "Content-Type: application/json" -d '{"name":"file","auto_init":false,"visibility":"public"}' "https://api.github.com/user/repos")
          CREATE_CODE=$(echo "$CREATE_RESP" | tail -n1)
          [ "$CREATE_CODE" -ne 201 ] && exit 1

      - run: |
          if ! git clone -b main --single-branch --depth 1 https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git target-repo; then
            mkdir -p target-repo && cd target-repo && git init && git remote add origin https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git && git checkout -b main
          fi
          mv tv target-repo/
          cd target-repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git diff --quiet -- tv && exit 0
          CURRENT_TIME=$(date -d "+8 hours" +'%Y-%m-%d %H:%M:%S')
          SYNC_NOTE="${{ github.event.inputs.sync_note }}"
          COMMIT_MSG="sync: merge & clean tv - $CURRENT_TIME"
          [ -n "$SYNC_NOTE" ] && COMMIT_MSG="$COMMIT_MSG | $SYNC_NOTE"
          git add tv && git commit -m "$COMMIT_MSG"
          git push --retry 3 https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git HEAD:main
