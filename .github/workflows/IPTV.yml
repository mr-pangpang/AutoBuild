name: IPTV

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC凌晨执行
  workflow_dispatch:  # 手动触发优先测试

jobs:
  save-tv:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 明确授予写入权限
    steps:
      - name: 拉取仓库代码（完整历史）
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保拉取所有分支历史，避免对比错误
          ref: ${{ github.ref }}  # 拉取当前触发分支（默认主分支）

      - name: 下载文件到根目录
        run: |
          echo "开始下载文件: http://123.56.43.183/tv/TV.txt"
          # 下载并显示HTTP状态码，便于排查
          curl -v --retry 3 --max-time 30 "http://123.56.43.183/tv/TV.txt" -o "TV.txt"
          
          # 强制检查下载结果（即使curl不报错，也验证文件存在）
          if [ ! -f "TV.txt" ]; then
            echo "❌ 下载失败，文件未创建"
            exit 1
          fi

      - name: 验证文件内容（非空检查）
        run: |
          echo "验证TV.txt内容..."
          if [ -s "TV.txt" ]; then  # 确保文件非空
            echo "文件大小: $(du -h TV.txt)"
            echo "前3行内容: $(head -n 3 TV.txt | tr '\n' ' ')"  # 简洁预览
          else
            echo "❌ TV.txt内容为空，终止流程"
            exit 1
          fi

      - name: 检查文件状态（含首次创建）
        id: file_status
        run: |
          # 1. 若文件不存在（理论上不会到这步，保险检查）
          if [ ! -f "TV.txt" ]; then
            echo "状态: 文件不存在，需创建"
            echo "need_commit=true" >> $GITHUB_OUTPUT
          # 2. 若文件是新创建的（仓库中原本没有）
          elif ! git ls-files --error-unmatch "TV.txt" > /dev/null 2>&1; then
            echo "状态: 新文件，需提交"
            echo "need_commit=true" >> $GITHUB_OUTPUT
          # 3. 若文件已存在，检查内容变化
          else
            if git diff --quiet "TV.txt"; then
              echo "状态: 内容无变化"
              echo "need_commit=false" >> $GITHUB_OUTPUT
            else
              echo "状态: 内容有更新"
              echo "need_commit=true" >> $GITHUB_OUTPUT
            fi
          fi

      - name: 提交并推送（强制处理）
        if: steps.file_status.outputs.need_commit == 'true'
        run: |
          # 配置Git身份
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@github.com"
          
          # 添加文件
          git add "TV.txt"
          
          # 提交（允许首次创建的空提交提示）
          commit_msg="Auto-update TV.txt: $(date -u +'%Y-%m-%d %H:%M UTC')"
          if ! git commit -m "$commit_msg"; then
            echo "⚠️ 提交命令返回错误，尝试强制提交"
            # 极端情况：文件存在但git未识别，强制提交
            git commit -m "$commit_msg" --allow-empty
          fi
          
          # 明确推送当前分支（避免分支错误）
          git push origin ${{ github.ref_name }}
          echo "✅ 已推送至分支: ${{ github.ref_name }}"

      - name: 无更新提示
        if: steps.file_status.outputs.need_commit == 'false'
        run: |
          echo "ℹ️ TV.txt内容无变化，无需提交"
