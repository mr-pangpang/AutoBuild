name: 抓取内容并保存到仓库

on:
  schedule:
    - cron: '0 2 * * *'  # 可调整定时时间
  workflow_dispatch:  # 手动触发，方便测试

# 关键：赋予推送权限
permissions:
  contents: write
  actions: read

jobs:
  fetch-and-save:
    runs-on: windows-latest
    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保拉取完整历史，避免提交冲突

      - name: 切换到仓库根目录（强制确保路径正确）
        run: |
          echo 切换前当前目录：%cd%
          cd /d "%GITHUB_WORKSPACE%"  # 强制切换到仓库根目录
          echo 切换后当前目录：%cd%
        shell: cmd

      - name: 运行批处理抓取内容（保留完整日志）
        run: |
          .\fetch-content.bat  # 执行批处理，会输出详细日志
        shell: cmd
        continue-on-error: false  # 抓取失败直接终止，避免无效提交

      - name: 提交前验证文件状态（关键：确认文件存在且非空）
        run: |
          echo ============== 文件状态检查 ==============
          if exist "Gather.txt" (
              echo Gather.txt 存在
              :: 查看文件大小和前10行内容（确认是否是预期内容）
              dir Gather.txt
              echo 文件前10行内容：
              head -n 10 Gather.txt
          ) else (
              echo 错误：Gather.txt 不存在！
              exit 1
          )
        shell: bash  # 使用 bash 工具更方便查看文件信息

      - name: 提交并推送文件到仓库
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add Gather.txt
          # 检查是否有变更（避免空提交）
          if git diff --quiet --cached; then
              echo 无文件变更，无需提交
          else
              git commit -m "Auto update: Fetch latest content"
              git push
              echo 提交推送成功！
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
