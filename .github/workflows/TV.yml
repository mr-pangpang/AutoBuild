name: TV
on:
  schedule:
    - cron: "0 */2 * * *"  # 每两小时执行（分钟 小时 日 月 周）
  workflow_dispatch:  # 保留手动触发，方便测试

jobs:
  download-and-save:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取当前仓库（Live）代码
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 从指定链接下载TV.txt
        run: |
          curl -f -o TV.txt "http://123.56.43.183/tv/TV.txt"
          echo "下载完成，文件大小：$(du -h TV.txt)"

      - name: 检查disk仓库是否存在
        id: check_repo
        run: |
          RESPONSE=$(curl -s -w "%{http_code}" -H "Authorization: token ${{ secrets.PAT_TOKEN }}" "https://api.github.com/repos/mr-pangpang/disk")
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          echo "repo_exists=$([ "$HTTP_CODE" -eq 200 ] && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      - name: 若仓库不存在则创建
        if: steps.check_repo.outputs.repo_exists == 'false'
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"name": "disk", "auto_init": true}' \
          "https://api.github.com/user/repos"

      - name: 克隆disk仓库
        run: |
          git clone https://${{ secrets.PAT_TOKEN }}@github.com/mr-pangpang/disk.git target-repo

      - name: 移动文件到目标路径
        run: |
          mkdir -p target-repo/TV
          mv TV.txt target-repo/TV/
          echo "文件已移动到：target-repo/TV/TV.txt"

      - name: 提交并推送disk仓库变更
        run: |
          cd target-repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add TV/TV.txt
          git commit -m "定时下载并保存TV.txt（$(date +%Y-%m-%d_%H:%M:%S)）" || echo "无文件变更，无需提交"
          git push https://${{ secrets.PAT_TOKEN }}@github.com/mr-pangpang/disk.git HEAD:main
