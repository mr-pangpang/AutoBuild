name: Gather
on:
  schedule:
    - cron: "0 */2 * * *"
  workflow_dispatch:

jobs:
  download-and-save:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取当前仓库代码
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 测试链接可访问性
        run: |
          echo "测试链接可访问性..."
          
          # 测试1: 直接访问网站首页
          echo "1. 测试网站首页..."
          curl -I "https://tv.iill.top/" || echo "首页访问失败"
          
          # 测试2: 测试m3u目录
          echo "2. 测试m3u目录..."
          curl -I "https://tv.iill.top/m3u/" || echo "目录访问失败"
          
          # 测试3: 测试其他可能存在的文件
          echo "3. 测试其他文件..."
          curl -I "https://tv.iill.top/m3u/live" || echo "live文件测试失败"
          curl -I "https://tv.iill.top/m3u/iptv" || echo "iptv文件测试失败"
          
          echo "测试完成"

      - name: 尝试不同的URL变体
        run: |
          echo "尝试不同的URL变体..."
          
          # 可能的不同URL格式
          URLS=(
            "https://tv.iill.top/m3u/Gather"
            "https://tv.iill.top/m3u/gather"
            "https://tv.iill.top/Gather"
            "https://tv.iill.top/gather"
            "https://tv.iill.top/m3u/Gather.m3u"
            "https://tv.iill.top/m3u/gather.m3u"
          )
          
          for url in "${URLS[@]}"; do
            echo "尝试: $url"
            if curl -f -I "$url" 2>/dev/null | grep -q "200 OK"; then
              echo "✅ 找到有效链接: $url"
              echo "VALID_URL=$url" >> $GITHUB_ENV
              break
            fi
          done
          
          if [ -z "$VALID_URL" ]; then
            echo "❌ 未找到有效链接"
            # 继续执行，看看是否能通过其他方式获取
          fi

      - name: 使用代理或镜像站点
        run: |
          echo "尝试通过代理或镜像访问..."
          
          # 尝试使用公共代理或镜像
          MIRROR_URLS=(
            "https://mirror.ghproxy.com/https://tv.iill.top/m3u/Gather"
            "https://pd.zwc365.com/seturl/https://tv.iill.top/m3u/Gather"
          )
          
          for url in "${MIRROR_URLS[@]}"; do
            echo "尝试镜像: $url"
            curl -f -o Gather "$url"
            if [ $? -eq 0 ] && [ -s Gather ]; then
              echo "✅ 镜像下载成功"
              break
            fi
          done

      - name: 手动创建示例文件（如果下载失败）
        if: failure()
        run: |
          echo "由于原链接无法访问，创建示例文件..."
          cat > Gather << EOF
          #EXTM3U
          # 这是一个示例播放列表文件
          # 原链接 https://tv.iill.top/m3u/Gather 无法访问
          # 请检查链接是否正确或联系网站管理员
          
          #EXTINF:-1,示例频道 1
          https://example.com/stream1
          
          #EXTINF:-1,示例频道 2
          https://example.com/stream2
          EOF
          echo "✅ 已创建示例文件"

      - name: 检查dpdisk/file仓库是否存在
        id: check_repo
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token ${{ secrets.PANGPANG }}" "https://api.github.com/repos/dpdisk/file")
          echo "repo_exists=$([ "$RESPONSE" -eq 200 ] && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      - name: 若仓库不存在则创建
        if: steps.check_repo.outputs.repo_exists == 'false'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.PANGPANG }}" \
            -H "Content-Type: application/json" \
            -d '{"name":"file","auto_init":true,"visibility":"public"}' \
            "https://api.github.com/user/repos"

      - name: 克隆dpdisk/file仓库
        run: |
          git clone -b main --single-branch https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git target-repo || \
          (mkdir -p target-repo && cd target-repo && git init && git remote add origin https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git && git checkout -b main)

      - name: 移动文件到目标仓库
        run: |
          mv Gather target-repo/
          echo "文件已移动到目标仓库"

      - name: 提交并推送变更
        run: |
          cd target-repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add Gather
          CURRENT_TIME=$(date -d "+8 hours" +'%Y-%m-%d %H:%M:%S')
          git commit -m "自动更新: $CURRENT_TIME (原链接无法访问)" || echo "无变更"
          git push https://${{ secrets.PANGPANG }}@github.com/dpdisk/file.git HEAD:main
